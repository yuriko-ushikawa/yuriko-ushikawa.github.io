{"version":3,"sources":["components/Poll/PollContainer.js","actions/utils.js","components/Poll/Thanks.js","components/Poll/Questions/Form.js","components/Poll/Questions/Przypominanie.js","components/Poll/Questions/Odpamietywanie.js","components/Poll/Questions/Rotacja.js","components/Poll/Questions/Question.js","services/answers.service.js","actions/answers.js","reducers/auth.js","reducers/message.js","reducers/answers.js","reducers/utils.js","reducers/answer.js","reducers/index.js","reducers/questions.js","store.js","services/auth.service.js","actions/auth.js","components/Routes/Login.js","components/Poll/PersonalData.js","components/Routes/Home.js","components/Routes/Profile.js","components/Admin/Form/questionTypes.js","components/Admin/Form/TypesMenu.js","services/questions.service.js","components/Admin/Form/Form.js","actions/questions.js","components/Admin/Questions/Question/Image.js","components/Admin/Questions/Question/Question.js","components/Admin/Questions/ListQuestions.js","components/Routes/BoardAdmin.js","helpers/history.js","App.js","actions/message.js","index.js","actions/types.js","components/Utils/Checkbox.js","components/Poll/instructions.js","audio/city.mp3","audio/nature.mp3","audio/station.mp3"],"names":["PollContainer","soundType","city","citySound","nature","natureSound","station","stationSound","dispatch","useDispatch","questions","useSelector","state","utils","answers","useState","isFinished","activeQuestion","setState","isReady","controls","setControls","useEffect","incrementCounter","pushSingleAnswer","answer","counter","length","prevState","showQuestion","typeName","instructions","type","value","onClick","url","eval","playing","loop","volume","width","height","types","Thanks","props","sendAnswer","answersIsLoading","Form","_id","isCorrect","handleChoice","e","choice_id","target","choices","find","choice","isTrue","onSubmit","preventDefault","pushAnswer","text","map","i","console","log","label","key","Checkbox","handleCheckboxChange","val","createCheckbox","Przypominanie","imageVisible","setImageVisible","className","setTimeout","src","image","Odpamietywanie","words","activeWord","setActiveWord","setCounter","renderQuestion","Rotacja","Question","newAnswer","axios","post","get","pushUserData","data","payload","a","AnswerService","error","getLatestAnswer","chooseSoundType","latestAudio","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","gender","age","questionsIsLoading","combineReducers","action","filter","question","auth","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","message","SET_MESSAGE","CLEAR_MESSAGE","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","username","password","API_URL","then","response","accessToken","setItem","stringify","removeItem","logout","AuthService","required","role","Login","form","useRef","checkBtn","setUsername","setPassword","loading","setLoading","to","alt","current","validateAll","context","_errors","Promise","resolve","toString","reject","login","history","push","window","location","reload","catch","ref","htmlFor","name","onChange","validations","disabled","style","display","PersonalData","validationSchema","Yup","shape","typeError","initialValues","values","errors","touched","isValidating","aria-labelledby","Home","initialAnswerData","Profile","currentUser","substring","substr","id","email","roles","index","ODPAMIETYWANIE","TypesMenu","handleTypeChoice","newQuestion","delete","questionData","setQuestionData","questionType","setQuestionType","tempWord","setTempWord","tempAnswer","setTempAnswer","QuestionService","multiple","onDone","base64","placeholder","indexOf","x","list","splice","handleRemoveWord","findIndex","element","modifiedChoices","handleIsTrue","handleRemoveAnswer","Image","color","ListQuestions","BoardAdmin","setShowAdminBoard","href","createBrowserHistory","App","listen","basename","process","exact","path","component","ReactDOM","render","document","getElementById","QUESTIONS_FETCHED","QUESTION_CREATED","QUESTION_DELETED","USER_DATA_ADDED","ANSWERS_PUSHED","ANSWER_PUSHED","ANSWER_CREATED","LATEST_ANSWER_FETCHED","SOUND_TYPE_ADDED","ACTION_FAILED","LOADING_ANSWERS","LOADING_QUESTIONS","ANSWERS_LOADED","QUESTIONS_LOADED","INCREMENT_COUNTER","ROTACJA","PRZYPOMINANIE"],"mappings":"gkDAeMA,cAAgB,SAAhBA,cAAiBC,WAEnB,IAAMC,KAAOC,gDACPC,OAASC,kDACTC,QAAUC,mDAEVC,SAAWC,qDAEXC,UAAYC,oDAAY,SAAAC,GAAK,OAAIA,EAAMF,aAEvCG,MAAQF,oDAAY,SAAAC,GAAK,OAAIA,EAAMC,SAEnCC,QAAUH,oDAAY,SAAAC,GAAK,OAAIA,EAAME,WAZV,UAiBPC,oDAAS,CAC/BC,YAAY,EACZC,eAAgBP,UAAU,GAC1BI,QAAS,KApBoB,oJAiB1BF,MAjB0B,cAiBnBM,SAjBmB,yBAuBDH,oDAAS,CACrCI,SAAS,IAxBoB,qJAuB1BC,SAvB0B,cAuBhBC,YAvBgB,cA4BjCC,sDAAU,kBAAMd,SAASe,2DAAqB,CAACX,QAE/C,IAAMY,iBAAmB,SAACC,GAGdZ,MAAMa,QAAUhB,UAAUiB,QAC5BT,UAAS,SAAAU,GAAS,kQACbA,GADa,IAEhBX,eAAiBP,UAAUG,MAAMa,SACjCA,QAASb,MAAMa,aAEjBL,YAAY,2PAAID,UAAL,IAAeD,SAAS,MAGnCD,SAAS,2PAAKN,OAAN,IAAaI,YAAY,MAOrCa,aAAe,SAACC,EAAUC,GAC5B,OACA,8EACEnB,MAAMK,eAAee,OAASF,IAAcV,SAASD,UAAYP,MAAMI,YACrE,8EACA,0EAAIe,IACJ,qEAAOC,KAAK,SAASC,MAAM,QACvBC,QAAS,kBACTb,YAAY,2PAAID,UAAL,IAAeD,SAAS,WAIzCP,MAAMK,eAAee,OAASF,GAAaV,SAASD,UAAYP,MAAMI,YACpE,4EACI,4DAAC,mDAAD,2PAAcJ,OAAd,IAAqBY,iBAAkBA,0BAMnD,OAGI,8EAER,4DAAC,oDAAD,CAAaW,IAAKC,KAAKtB,QAAQb,WACrBoC,SAAS,EACTC,MAAM,EACNC,OAAQ,EACRnB,UAAU,EACVoB,MAAO,EACPC,OAAQ,IAETZ,aAAa,UAAUE,8CACvBF,aAAa,gBAAgBE,8CAC7BF,aAAa,iBAAiBE,8CAE9BnB,MAAMI,YAAc,4DAAC,uCAAD,QAKdhB,qC,iCC1Gf,6CAMauB,EAAmB,WAC5B,MAAO,CACJS,KAAMU,O,iCCRb,iCA+BeC,IA3BA,SAACC,GAGZ,IAAMpC,EAAWC,cAEXK,EAAUH,aAAY,SAAAC,GAAK,OAAIA,EAAME,WACrCD,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAOzC,OAJAS,qBAAU,WACNd,EAASqC,YAAW/B,MAAY,CAACA,IAIjC,gCACED,EAAMiC,kBAAqB,0EAE1BjC,EAAMiC,kBAET,gF,wFCoCOC,EArDF,SAACH,GAEV,IAAMpC,EAAWC,cAFG,EAIMM,mBAAS,CAACiC,IAAKJ,EAAM3B,eAAe+B,IAAKC,WAAW,IAJ1D,mBAIbrC,EAJa,KAINM,EAJM,KAMdgC,EAAe,SAACC,GAElB,IAAMC,EAAYD,EAAEE,OAAOpB,MAENW,EAAM3B,eAAeqC,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOR,MAAQI,KAE/DK,OACTvC,EAAS,2BAAIN,GAAL,IAAYoC,IAAKJ,EAAM3B,eAAe+B,IAAKC,WAAW,KAE9D/B,EAAS,2BAAIN,GAAL,IAAYoC,IAAKJ,EAAM3B,eAAe+B,IAAKC,WAAW,MAqB1E,OAEI,8BACA,uBAAMS,SAnBW,SAACP,GAClBA,EAAEQ,iBACFf,EAAMpB,iBAAiBZ,GACvBJ,EAASoD,YAAWhD,KAgBpB,UACI,4BAAIgC,EAAM3B,eAAe4C,OACxBjB,EAAM3B,eAAeqC,QAAQQ,KAAI,SAACN,EAAQO,GAEvC,OADAC,QAAQC,IAAIT,EAAOR,KAhBR,SAACkB,EAAMC,EAAIjB,GAAX,OACnB,cAACkB,EAAA,EAAD,CACEF,MAAOA,EACPG,qBAAsBnB,EACtBoB,IAAKH,GACAA,GAYQI,CAAef,EAAOK,KAAML,EAAOR,IAAKE,MAInD,uBAAOlB,KAAK,SAASC,MAAM,gBCxBxBuC,G,OAzBO,SAAC5B,GAAW,IAAD,EAEW7B,oBAAS,GAFpB,mBAEtB0D,EAFsB,KAERC,EAFQ,KAa7B,OACI,sBAAKC,UAAU,WAAf,eAPAC,YAAW,WACPF,GAAgB,KAJR,KAaND,GAAiB,qBAAKE,UAAU,gBAAgBE,IAAKjC,EAAM3B,eAAe6D,SAEzEL,GAAiB,cAAC,EAAD,eAAU7B,SCW3BmC,EA9BQ,SAACnC,GAAW,IAAD,EAEE7B,mBAAS6B,EAAM3B,eAAe+D,MAAM,IAFtC,mBAE3BC,EAF2B,KAEfC,EAFe,OAGJnE,mBAAS,GAHL,mBAG3BW,EAH2B,KAGlByD,EAHkB,KAOlC7D,qBAAU,WACNsD,YAAW,WACXO,EAAWzD,EAAU,GACjBA,EAAUkB,EAAM3B,eAAe+D,MAAMrD,OACzCuD,EAActC,EAAM3B,eAAe+D,MAAMtD,IAEzCwD,EAAc,QARF,OASC,CAACD,IASd,OACI,8BARmB,SAACA,GACpB,OAAIA,EACG,6BAAKA,IAEL,cAAC,EAAD,eAAUrC,IAKZwC,CAAeH,MCfbI,EAVC,SAACzC,GACb,OACI,gCAEI,qBAAKiC,IAAKjC,EAAM3B,eAAe6D,MAAOH,UAAU,kBAChD,cAAC,EAAD,eAAU/B,QCgBP0C,IAnBE,SAAE1C,GAEf,IAAwBZ,EASxB,OAEA,+BAXwBA,EAYRY,EAAM3B,eAAee,KAXpB,mBAATA,EACG,cAAC,EAAD,eAAoBY,IACT,kBAATZ,EACF,cAAC,EAAD,eAAmBY,IAEnB,cAAC,EAAD,eAAaA,S,yQCZtBT,EAAM,8CAmBG,EAbI,SAACoD,GAChB,OAAOC,IAAMC,KAAKtD,EAAKoD,IAYZ,EAJS,WACpB,OAAOC,IAAME,IAAN,UAAavD,EAAb,aCVEwD,EAAe,SAACC,GACzB,MAAO,CACJ5D,KAAMU,IACNmD,QAASD,IAWHhC,EAAa,SAAEgC,GACxB,MAAO,CACH5D,KAAMU,IACNmD,QAASD,IAuBJ/C,EAAa,SAACpB,GAAD,8CAAY,WAAOjB,GAAP,iBAAAsF,EAAA,sEAE9BtF,EAAS,CAAEwB,KAAMU,MAFa,SAGPqD,EAAyBtE,GAHlB,gBAGtBmE,EAHsB,EAGtBA,KACRpF,EAAS,CAAEwB,KAAMU,MACjBlC,EAAS,CAAEwB,KAAMU,IAAsBmD,QAASD,IALlB,kDAQ9BpF,EAAS,CAAEwB,KAAMU,IAAqBsD,MAAK,OARb,0DAAZ,uDAYbC,EAAkB,yDAAM,WAAOzF,GAAP,mBAAAsF,EAAA,sEAE7BtF,EAAS,CAAEwB,KAAMU,MAFY,SAGNqD,IAHM,gBAGrBH,EAHqB,EAGrBA,KACRpF,EAAS,CAAEwB,KAAMU,MACjBlC,EAAS,CAAEwB,KAAMU,IAA6BmD,QAASD,IAEjDM,EAAkB,SAACC,GACrB,OAAQA,GACN,IAAM,UACJ,MAAO,SACT,IAAM,SACJ,MAAO,OACT,IAAM,OAEN,QACE,MAAO,YAIf3F,EAAS,CAAEwB,KAAMU,IAAwBmD,QAASK,EAAgBN,EAAK3F,aApB1C,kDAuB7BO,EAAS,CAAEwB,KAAMU,IAAqBsD,MAAK,OAvBd,0DAAN,wD,6LCtDvBI,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAEvCC,EAAeL,EACjB,CAAEM,YAAY,EAAMN,QACpB,CAAEM,YAAY,EAAON,KAAM,MCR3BK,EAAe,GCCfA,EAAe,CACjBE,OAAQ,KACRC,IAAK,GACL9F,QAAS,GACTb,UAAW,WCHTwG,EAAe,CACjBI,oBAAoB,EACpB/D,kBAAkB,EAClBkD,MAAO,KACPtE,QAAS,GCLP+E,EAAe,CACjBE,OAAQ,KACRC,IAAK,GACL9F,QAAS,GACTb,UAAW,ICCA6G,4BAAgB,CAC3BpG,UCLW,WAA6B,IAA5BA,EAA2B,uDAAf,GAAIqG,EAAW,uCAGvC,OAAOA,EAAO/E,MAEV,KAAKU,IAGL,KAAKA,IACD,OAAOqE,EAAOlB,QAEjB,KAAKnD,IACD,MAAM,GAAN,mBAAWhC,GAAX,CAAsBqG,EAAOlB,UAEjC,KAAKnD,IACD,OAAOhC,EAAUsG,QAAO,SAACC,GAAD,OAAcA,EAASjE,MAAQ+D,EAAOlB,WAC9D,QACG,OAAOnF,IDXnBwG,KLEa,WAAyC,IAA/BtG,EAA8B,uDAAtB6F,EAAcM,EAAQ,uCAC7C/E,EAAkB+E,EAAlB/E,KAAM6D,EAAYkB,EAAZlB,QAEd,OAAQ7D,GACN,KAAKmF,IACH,OAAO,2BACFvG,GADL,IAEE8F,YAAY,EACZN,KAAMP,EAAQO,OAElB,KAAKgB,IAML,KAAKC,IACH,OAAO,2BACFzG,GADL,IAEE8F,YAAY,EACZN,KAAM,OAEV,QACE,OAAOxF,IKxBX0G,QJPW,WAAyC,IAA/B1G,EAA8B,uDAAtB6F,EAAcM,EAAQ,uCAC7C/E,EAAkB+E,EAAlB/E,KAAM6D,EAAYkB,EAAZlB,QAEd,OAAQ7D,GACN,KAAKuF,IACH,MAAO,CAAED,QAASzB,GAEpB,KAAK2B,IACH,MAAO,CAAEF,QAAS,IAEpB,QACE,OAAO1G,IIHTE,QHFW,WAAmC,IAAlCF,EAAiC,uDAAzB6F,EAAcM,EAAW,uCAE7C,OAAOA,EAAO/E,MACV,KAAKU,IACD,OAAO,2BAAI9B,GAAX,IAAkB+F,OAAQI,EAAOlB,QAAQc,OAAQC,IAAKG,EAAOlB,QAAQe,MACzE,KAAKlE,IACD,OAAO,2BAAI9B,GAAX,IAAkBE,QAASiG,EAAOlB,UACtC,KAAKnD,IACD,OAAO,2BAAI9B,GAAX,IAAkBE,QAAQ,GAAD,mBAAMF,EAAME,SAAZ,CAAqBiG,EAAOlB,YACzD,KAAKnD,IACD,OAAO9B,EACX,KAAK8B,IACD,OAAO,2BAAI9B,GAAX,IAAkBX,UAAW8G,EAAOlB,UACxC,KAAKnD,IAEL,QACI,OAAO9B,IGbfa,ODHW,WAAmC,IAAlCb,EAAiC,uDAAzB6F,EAAcM,EAAW,uCAE7C,OAAOA,EAAO/E,MACV,KAAKU,IACD,OAAOqE,EAAOlB,QAElB,QACI,OAAOjF,ICHfC,MFHW,WAAmC,IAAlCA,EAAiC,uDAAzB4F,EAAcM,EAAW,uCAG7C,OAAOA,EAAO/E,MAEV,KAAKU,IACD,OAAO,2BAAI7B,GAAX,IAAkBgG,oBAAoB,IAE1C,KAAKnE,IACD,OAAO,2BAAI7B,GAAX,IAAkBgG,oBAAoB,IAI1C,KAAKnE,IACD,OAAO,2BAAI7B,GAAX,IAAkBiC,kBAAkB,IAExC,KAAKJ,IACD,OAAO,2BAAI7B,GAAX,IAAkBiC,kBAAkB,IAIxC,KAAKJ,IACD,OAAO,2BAAI7B,GAAX,IAAkBmF,MAAOe,EAAOf,QAEpC,KAAKtD,IACD,OAAO,2BAAI7B,GAAX,IAAkBa,QAASb,EAAMa,QAAU,IAE/C,QACI,OAAOb,MIlCb4G,EAAa,CAACC,KAOLC,EALDC,sBACZC,EACAC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,4GCc1B,EAnBD,SAACO,EAAUC,GACvB,OAAOzC,IACJC,KAAKyC,sDAAoB,CACxBF,WACAC,aAEDE,MAAK,SAACC,GAKL,OAJIA,EAASxC,KAAKyC,aAChB9B,aAAa+B,QAAQ,OAAQjC,KAAKkC,UAAUH,EAASxC,OAGhDwC,EAASxC,SAQP,EAJA,WACbW,aAAaiC,WAAW,SCqBXC,EAAS,kBAAM,SAACjI,GAC3BkI,IAEAlI,EAAS,CACPwB,KAAMqF,Q,OCnCNsB,EAAW,SAAC1G,GAChB,IAAKA,EACH,OACE,qBAAK0C,UAAU,qBAAqBiE,KAAK,QAAzC,sCAgHSC,EAzGD,SAACjG,GACb,IAAMkG,EAAOC,mBACPC,EAAWD,mBAFM,EAIShI,mBAAS,IAJlB,mBAIhBiH,EAJgB,KAINiB,EAJM,OAKSlI,mBAAS,IALlB,mBAKhBkH,EALgB,KAKNiB,EALM,OAMOnI,oBAAS,GANhB,mBAMhBoI,EANgB,KAMPC,EANO,KAQf1C,EAAe/F,aAAY,SAAAC,GAAK,OAAIA,EAAMsG,QAA1CR,WACAY,EAAY3G,aAAY,SAAAC,GAAK,OAAIA,EAAM0G,WAAvCA,QAEF9G,EAAWC,cAiCjB,OAAIiG,EACK,cAAC,IAAD,CAAU2C,GAAG,WAIpB,qBAAK1E,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEE,IAAI,8CACJyE,IAAI,cACJ3E,UAAU,qBAGZ,eAAC,IAAD,CAAMjB,SAlCQ,SAACP,GACnBA,EAAEQ,iBAEFyF,GAAW,GAEXN,EAAKS,QAAQC,cAEmC,IAA5CR,EAASO,QAAQE,QAAQC,QAAQ/H,OACnCnB,ED1CiB,SAACwH,EAAUC,GAAX,OAAwB,SAACzH,GAC5C,OAAOkI,EAAkBV,EAAUC,GAAUE,MAC3C,SAACvC,GAMC,OALApF,EAAS,CACPwB,KAAMmF,IACNtB,QAAS,CAAEO,KAAMR,KAGZ+D,QAAQC,aAEjB,SAAC5D,GACC,IAAMsB,EACHtB,EAAMoC,UACLpC,EAAMoC,SAASxC,MACfI,EAAMoC,SAASxC,KAAK0B,SACtBtB,EAAMsB,SACNtB,EAAM6D,WAWR,OATArJ,EAAS,CACPwB,KAAMoF,MAGR5G,EAAS,CACPwB,KAAMuF,IACN1B,QAASyB,IAGJqC,QAAQG,aCeRC,CAAM/B,EAAUC,IACtBE,MAAK,WACJvF,EAAMoH,QAAQC,KAAK,UACnBC,OAAOC,SAASC,YAEjBC,OAAM,WACLjB,GAAW,MAGfA,GAAW,IAiBoBkB,IAAKxB,EAAlC,UACE,sBAAKnE,UAAU,aAAf,UACE,uBAAO4F,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEvI,KAAK,OACL2C,UAAU,eACV6F,KAAK,WACLvI,MAAO+F,EACPyC,SApDa,SAACtH,GACxB,IAAM6E,EAAW7E,EAAEE,OAAOpB,MAC1BgH,EAAYjB,IAmDF0C,YAAa,CAAC/B,QAIlB,sBAAKhE,UAAU,aAAf,UACE,uBAAO4F,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEvI,KAAK,WACL2C,UAAU,eACV6F,KAAK,WACLvI,MAAOgG,EACPwC,SA3Da,SAACtH,GACxB,IAAM8E,EAAW9E,EAAEE,OAAOpB,MAC1BiH,EAAYjB,IA0DFyC,YAAa,CAAC/B,QAIlB,qBAAKhE,UAAU,aAAf,SACE,yBAAQA,UAAU,4BAA4BgG,SAAUxB,EAAxD,UACGA,GACC,sBAAMxE,UAAU,qCAElB,8CAIH2C,GACC,qBAAK3C,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBiE,KAAK,QAAzC,SACGtB,MAIP,cAAC,IAAD,CAAasD,MAAO,CAAEC,QAAS,QAAUP,IAAKtB,a,gCC6BzC8B,G,OAxIM,SAAC7K,GAElB,IAFgC,EAORc,mBALH,CACjB4F,OAAQ,GACRC,IAAK,KAJuB,mBAS1B/F,GAT0B,UASlBF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAEnCL,EAAWC,cAkBXsK,EAAmBC,MAAaC,MAAM,CACxCrE,IAAKoE,MAAarC,WAAWuC,UAAU,wBACvCvE,OAAQqE,MAAarC,WAAWuC,UAAU,6BAW9C,OAEKrK,EAAMgG,oBAAsBhG,EAAMiC,iBAC/B,kEAEJ,gCAEI,qDAEZ,8SAGA,8jBAIA,qNAGA,wDAEA,qRAEY,cAAC,IAAD,CACIqI,cAAgB,CACZvE,IAAK,GACLD,OAAQ,IAEZoE,iBAAoBA,EACpBrH,SAAY,SAAA0H,GACR5K,EAASmF,YAAayF,KAP9B,SASC,cAAGA,OAAH,IAAWC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAAnB,EAA4BC,aAA5B,OACG,eAAC,IAAD,WACI,qBAAK5G,UAAU,aAAf,SACA,kCACA,cAAC,IAAD,CAAO6F,KAAK,QACZ,wDAGCa,EAAOzE,KAAO0E,EAAQ1E,KAAO,8BAAMyE,EAAOzE,MAC3C,qBAAKgC,KAAK,QAAQjE,UAAU,aAAa6G,kBAAgB,iBAAzD,SACA,kCACI,kCACA,cAAC,IAAD,CAAOxJ,KAAK,QAAQwI,KAAK,SAASvI,MAAM,YADxC,aAIA,kCACA,cAAC,IAAD,CAAOD,KAAK,QAAQwI,KAAK,SAASvI,MAAM,wBADxC,yBAIA,4DAGHoJ,EAAO1E,QAAU2E,EAAQ3E,QAAU,8BAAM0E,EAAO1E,SAEjD,wBAAQ3E,KAAK,SAAb,mC,SCpELyJ,G,wBAtBF,WAGMhL,cAAjB,IAEMiL,EAAoB/K,aAAY,SAAAC,GAAK,OAAIA,EAAME,WACvCH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAGzC,OAEI,8BAEkC,MAA5B6K,EAAkB/E,QAA2C,IAAzB+E,EAAkB9E,IAExD,cAAC,EAAD,IACA,cAAC5G,EAAA,EAAD,QCEK2L,EAjCC,WAAO,IACPC,EAAgBjL,aAAY,SAACC,GAAD,OAAWA,EAAMsG,QAAnDd,KAER,OAAKwF,EAKH,sBAAKjH,UAAU,YAAf,UACE,wBAAQA,UAAU,YAAlB,SACE,+BACE,iCAASiH,EAAY5D,WADvB,gBAIF,8BACE,4CADF,IAC2B4D,EAAYvD,YAAYwD,UAAU,EAAG,IADhE,OACyE,IACtED,EAAYvD,YAAYyD,OAAOF,EAAYvD,YAAY1G,OAAS,OAEnE,8BACE,yCADF,IACwBiK,EAAYG,MAEpC,8BACE,4CADF,IAC2BH,EAAYI,SAEvC,kDACA,6BACGJ,EAAYK,OACXL,EAAYK,MAAMnI,KAAI,SAAC8E,EAAMsD,GAAP,OAAiB,6BAAiBtD,GAARsD,WAvB/C,cAAC,IAAD,CAAU7C,GAAG,Y,kBCRX8C,EAAiB,iBCqCfC,EA3BG,SAACxJ,GAGjB,IAAM2B,EAAiB,SAACL,EAAMmI,GAAP,OACrB,cAACjI,EAAA,EAAD,CACEF,MAAOA,EACPG,qBAAsBgI,EACtB/H,IAAKJ,KAMP,OAEA,gCACA,wDACA,iCACGK,ED1BsB,gBC0BO3B,EAAMyJ,kBACnC9H,EAAe4H,EAAevJ,EAAMyJ,kBACpC9H,ED7BgB,UC6BO3B,EAAMyJ,yB,yBC5B9BlK,EAAM,gDAeG,GAbQ,WACnB,OAAOqD,IAAME,IAAIvD,IAYN,GATQ,SAACmK,GACpB,OAAO9G,IAAMC,KAAKtD,EAAKmK,IAQZ,GAJQ,SAACP,GACpBvG,IAAM+G,OAAN,UAAgBpK,EAAhB,YAAuB4J,KCkLZhJ,GA9KK,WAEhB,IAAMvC,EAAWC,cAFK,EAQkBM,mBAJnB,CACjB8C,KAAM,GAAIiB,MAAO,GAAIxB,QAAS,GAAItB,KAAM,GAAIgD,MAAO,KALjC,mBAQfwH,EARe,KAQDC,EARC,OAUkB1L,mBAAS,IAV3B,mBAUf2L,EAVe,KAUDC,EAVC,OAYU5L,mBAAS,IAZnB,mBAYf6L,EAZe,KAYLC,EAZK,OAcc9L,mBAAS,IAdvB,mBAcf+L,EAde,KAcHC,EAdG,KAwFtB,OAEI,gCAEI,cAAC,EAAD,CAAWV,iBA3EM,SAAClJ,GACtBwJ,EAAgBxJ,EAAEE,OAAOpB,OACzBwK,EAAgB,2BAAID,GAAL,IAAmBxK,KAAMmB,EAAEE,OAAOpB,cA2ExB,KAAjByK,IAEJ,uBAAMhJ,SAzEO,SAACP,GCrBI,IAAC8D,EDsBvB9D,EAAEQ,iBACFnD,GCvBuByG,EDuBCuF,ECvBF,uCAAc,WAAOhM,GAAP,iBAAAsF,EAAA,sEAEpCtF,EAAS,CAAEwB,KAAMU,MAFmB,SAGbsK,GAA+B/F,GAHlB,gBAG5BrB,EAH4B,EAG5BA,KACRpF,EAAS,CAAEwB,KAAMU,MACjBlC,EAAS,CAAEwB,KAAMU,IAAwBmD,QAASD,IALd,kDAQpCpF,EAAS,CAAEwB,KAAMU,IAAqBsD,MAAK,OARP,0DAAd,wDDwBtByG,EAAgB,2BAAID,GAAL,IAAmB3I,KAAM,GAAIiB,MAAO,GAAIxB,QAAS,GAAI0B,MAAO,OAsEvE,UACI,gEAAmC0H,KAEnC,mDAEI,0BAAUzK,MAAOuK,EAAa3I,KAC9B4G,SAAU,SAACtH,GAAD,OAAOsJ,EAAgB,2BAAID,GAAL,IAAmB3I,KAAMV,EAAEE,OAAOpB,iBAInEyK,IAAiBP,IACpB,oDAEI,cAAC,IAAD,CACInK,KAAK,OACLiL,UAAU,EACVC,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAcV,EAAgB,2BAAKD,GAAN,IAAoB1H,MAAOqI,WAKtET,IAAiBP,GACf,mDAGI,uBAAOiB,YAAY,cAAcpL,KAAK,OAAOC,MAAO2K,EAChDnC,SAAU,SAAAtH,GAAC,OAAI0J,EAAY1J,EAAEE,OAAOpB,UAExC,wBAAQC,QA5FJ,SAACiB,GAIrB,OAHEA,EAAEQ,iBAGa,KAAbiJ,GAAmBJ,EAAaxH,MAAMqI,QAAQT,IAAa,EACpD,GAGPH,EAAgB,2BAAID,GAAL,IAAmBxH,MAAM,GAAD,mBAAMwH,EAAaxH,OAAnB,CAA0B4H,OACjEC,EAAY,IACL,IAkFK,iBAEJ,6BACKL,EAAaxH,MAAMlB,KAAI,SAACwJ,EAAEvJ,GAC3B,OACI,+BACKyI,EAAaxH,MAAMjB,GACpB,wBAAQ/B,KAAK,SAASE,QAAS,kBAnFhC,SAACgK,GACtB,IAAIqB,EAAI,YAAOf,EAAaxH,OAC5BuI,EAAKC,OAAOtB,EAAO,GACnBO,EAAgB,2BAAID,GAAL,IAAmBxH,MAAOuI,KAgFkBE,CAAiB1J,IAAtD,sBAFKyI,EAAaxH,MAAMjB,YAYpC,4DAGI,uBAAOqJ,YAAY,kBAAkBpL,KAAK,OAAOC,MAAO6K,EACpDrC,SAAU,SAAAtH,GAAC,OAAI4J,EAAc5J,EAAEE,OAAOpB,UAE1C,wBAAQC,QA7FF,SAACiB,GACvBA,EAAEQ,iBAIF,MAAmB,KAAfmJ,GAAqBN,EAAalJ,QAAQoK,WAF1B,SAACC,GAAD,OAAaA,EAAQ9J,OAASiJ,MAEwB,EAC/D,GAGPL,EAAgB,2BAAID,GAAL,IAAmBlJ,QAAQ,GAAD,mBAAMkJ,EAAalJ,SAAnB,CAA4B,CAACO,KAAMiJ,EAAYrJ,QAAQ,QAChGsJ,EAAc,IACP,IAkFK,iBAEA,6BACCP,EAAalJ,QAAQQ,KAAI,SAACwJ,EAAEvJ,GAC7B,OACI,+BACKyI,EAAalJ,QAAQS,GAAGF,KACzB,+CAEA,uBAAO7B,KAAK,QAAQyI,SAAU,kBAvFnC,SAACyB,GAEpB,IACInI,EADA6J,EAAkBpB,EAAalJ,QAGnC,IAAKS,EAAI,EAAGA,EAAI6J,EAAgBjM,OAAQoC,IACxC6J,EAAgB7J,GAAGN,QAAS,EAE5BmK,EAAgB1B,GAAOzI,QAAS,EAEhCgJ,EAAgB,2BAAID,GAAL,IAAmBlJ,QAASsK,KA6EiBC,CAAa9J,IAAIyG,KAAK,SAASvI,MAAM,cAEzE,wBAAQD,KAAK,SAASE,QAAS,kBA5E9B,SAACgK,GACtB,IAAIqB,EAAI,YAAOf,EAAalJ,SAC5BiK,EAAKC,OAAOtB,EAAO,GACnBO,EAAgB,2BAAID,GAAL,IAAmBlJ,QAASiK,KAyEcO,CAAmB/J,IAAxD,sBANKyI,EAAalJ,QAAQS,GAAGF,cAczC,uBAAO7B,KAAK,kB,yBE9KjB+L,ICuFAzI,GAvFS,SAAC,GAAkB,IAAhB2B,EAAe,EAAfA,SAEjBzG,EAAWC,cAGjB,OACA,qBAAKkE,UAAU,SAAf,SACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,yBAGA,qBAAKA,UAAU,MAAf,SACKsC,EAASjF,UAIlB,sBAAK2C,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,6BAGA,qBAAKA,UAAU,MAAf,SACKsC,EAASpD,YAGG,mBAAlBoD,EAASjF,OACZ,sBAAK2C,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,qBAGA,qBAAKA,UAAU,MAAf,SAEI,cAAC,KAAD,CAAM0E,GAAE,2BAAsBpC,EAASjE,KAAvC,SACA,qBAAK2B,UAAU,gBAAgBE,IAAKoC,EAASnC,YAKjD,2BAKgB,mBAAlBmC,EAASjF,MACX,sBAAK2C,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,wBAGA,qBAAKA,UAAU,MAAf,SACA,6BACCsC,EAASjC,MAAMlB,KAAI,SAAAwJ,GAChB,OAAO,6BAAKA,EAAEzD,uBAMtB,sBAAKlF,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,wBAGA,qBAAKA,UAAU,MAAf,SACA,6BACKsC,EAAS3D,QAAQQ,KAAI,SAAAwJ,GAClB,OAAIA,EAAE7J,OACC,oBAA+BuK,MAAM,QAArC,SAA8CV,EAAEzJ,MAAvCoD,EAAS3D,QAAQN,KAE1B,oBAA+BgL,MAAM,QAArC,SAA8CV,EAAEzJ,MAAvCoD,EAAS3D,QAAQN,kBAQ7C,qBAAK2B,UAAU,QAAf,SACQ,wBAAQzC,QAAS,kBAAM1B,GFvDRuL,EEuDgC9E,EAASjE,IFvD1C,uCAAQ,WAAOxC,GAAP,SAAAsF,EAAA,sEAG9BtF,EAAS,CAAEwB,KAAMU,MAHa,SAIxBsK,GAA+BjB,GAJP,OAK9BvL,EAAS,CAAEwB,KAAMU,MACjBlC,EAAS,CAAEwB,KAAMU,IAAwBmD,QAASkG,IANpB,gDAS9BvL,EAAS,CAAEwB,KAAMU,IAAqBsD,MAAK,OATb,yDAAR,4DAAC+F,GEuDf,4BC1DDkC,GAxBO,WAEd,IAAMvN,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aACzCG,EAAQF,aAAa,SAAAC,GAAK,OAAIA,EAAMC,SAE9C,OACI,8BAGMA,EAAMmF,MACJhC,QAAQC,IAAIvD,EAAUsF,OAGtBtF,EAAUoD,KAAI,SAACmD,GAAD,OACf,cAAC,GAAD,CAA6BA,SAAUA,GAAxBA,EAASjE,WC8ExBkL,GAtFI,SAACtL,GAElB,IAAM/B,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAEnCL,EAAWC,cAJW,EAWgBM,oBAAS,GAXzB,mBAWLoN,GAXK,WAcdvC,EAAgBjL,aAAY,SAACC,GAAD,OAAWA,EAAMsG,QAAnDd,KA8BR,OA3BA9E,qBAAU,WACJsK,GACFuC,EAAkBvC,KAEnB,CAACA,IAwBF,qBAAKjH,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SAEGiH,EACC,gCACF,wBAAQwC,KAAK,SAASlM,QA5Cb,WAEb,OADA1B,EAASiI,KACF,cAAC,IAAD,CAAUY,GAAG,YA0ChB,8BAIFxI,EAAMgG,mBACJ,8BACI,qDAIJ,gCACA,oDACA,cAAC,GAAD,IACA,kDACA,cAAC,GAAD,UAMJ,qBAAKlC,UAAU,qBAAf,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,KAAD,CAAM0E,GAAI,SAAU1E,UAAU,WAA9B,SACE,iE,SClFGqF,GAAUqE,eC4HRC,I,OAxGH,WAAO,IAAD,EAE4BvN,oBAAS,GAFrC,mBAEOoN,GAFP,WAIFvC,EAAgBjL,aAAY,SAACC,GAAD,OAAWA,EAAMsG,QAAnDd,KAEF5F,EAAWC,cAEjBa,qBAAU,WACR0I,GAAQuE,QAAO,SAACpE,GACd3J,ECzB6B,CACjCwB,KAAMwF,WD0BH,CAAChH,IAGJc,qBAAU,WACRd,EAASyF,iBACR,IAEH3E,qBAAU,WACRd,ENlCwB,uCAAM,WAAOA,GAAP,iBAAAsF,EAAA,sEAE1BtF,EAAS,CAAEwB,KAAMU,MAFS,SAGHsK,KAHG,gBAGlBpH,EAHkB,EAGlBA,KACRpF,EAAS,CAAEwB,KAAMU,IAAyBmD,QAASD,IACnDpF,EAAS,CAAEwB,KAAMU,MALS,kDAO1BlC,EAAS,CAAEwB,KAAMU,IAAqBsD,MAAK,OAPjB,0DAAN,yDMmCvB,CAACxF,IASJc,qBAAU,WACJsK,GACFuC,EAAkBvC,KAEnB,CAACA,IAMJ,OACE,cAAC,IAAD,CAAQ5B,QAASA,GAASwE,SAAUC,GAApC,SACA,qBAAK9J,UAAU,aAAf,SACE,qBAAKA,UAAU,iBAAf,SA8CE,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO+J,OAAK,EAACC,KAAM,CAAC,QAAS,KAAMC,UAAWnD,IAC9C,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,SAASC,UAAW/F,IACtC,cAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,WAAWC,UAAWjD,IACxC,cAAC,IAAD,CAAOgD,KAAK,SAASC,UAAWV,kBE7G5CW,IAASC,OACP,cAAC,IAAD,CAAUnH,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEFoH,SAASC,eAAe,U,+BCZ1B,wqBACO,IAAM7H,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SAETE,EAAc,cACdC,EAAgB,gBAGhByH,EAAoB,oBAEpBC,EAAmB,mBACnBC,EAAmB,mBAGnBC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAgB,gBAEhBC,EAAiB,iBAIjBC,EAAwB,wBAExBC,EAAmB,mBAGnBC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAmB,mBAEnBC,EAAoB,qB,yDCTlB3L,IAvBE,SAACxB,GAAW,IAAD,EAEQ7B,oBAAS,GAFjB,6BAKxB,OACI,8BACK,qBAAK4D,UAAU,WAAf,SACL,kCACE,uBACkB3C,KAAK,QACLC,MAAOW,EAAM0B,IACbmG,SAAU7H,EAAMyB,qBAChBmG,KAAK,eAGtB5H,EAAMsB,e,gCClBjB,sGAAO,IAAM8L,EAAU,4LAEV7D,EAAiB,sKAEjB8D,EAAgB,uH,gCCJd,QAA0B,kC,gCCA1B,QAA0B,oC,gCCA1B,QAA0B,sC","file":"static/js/main.71fe3d49.chunk.js","sourcesContent":["import { Paper } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Question from './Questions/Question';\r\nimport { pushAnswers, pushAnswer } from '../../actions/answers';\r\nimport { incrementCounter } from '../../actions/utils';\r\nimport Thanks from './Thanks'\r\nimport * as instructions from './instructions';\r\nimport ReactPlayer from 'react-player';\r\nimport citySound from '../../audio/city.mp3';\r\nimport natureSound from '../../audio/nature.mp3';\r\nimport stationSound from '../../audio/station.mp3'; \r\n\r\n// Container recieves a question randomizer function as a prop\r\n\r\nconst PollContainer = (soundType) => {\r\n\r\n    const city = citySound;\r\n    const nature = natureSound;\r\n    const station = stationSound;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const questions = useSelector(state => state.questions);\r\n\r\n    const utils = useSelector(state => state.utils);\r\n    \r\n    const answers = useSelector(state => state.answers);\r\n\r\n\r\n\r\n             \r\n    const [state, setState] = useState({ \r\n        isFinished: false,\r\n        activeQuestion: questions[0],\r\n        answers: [],\r\n         })\r\n    \r\n    const [controls, setControls] = useState({\r\n        isReady: false,\r\n    })\r\n\r\n\r\n    useEffect(() => dispatch(incrementCounter()), [state])\r\n\r\n    const pushSingleAnswer = (answer) => {\r\n        {\r\n          \r\n            if (utils.counter < questions.length ) {\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                activeQuestion : questions[utils.counter],\r\n                counter: utils.counter\r\n              }))\r\n              setControls({...controls, isReady: false});\r\n\r\n            } else {\r\n              setState({ ...state, isFinished: true });\r\n            }\r\n          };\r\n    };\r\n\r\n\r\n    // example call: showQuestion('Rotacja',instructions.ROTACJA);\r\n    const showQuestion = (typeName, instructions) => { \r\n        return (\r\n        <div>\r\n        {(state.activeQuestion.type === typeName) && !controls.isReady && !state.isFinished &&\r\n            <div>\r\n            <p>{instructions}</p>\r\n            <input type=\"button\" value=\"Dalej\"\r\n                onClick={() => \r\n                setControls({...controls, isReady: true})}\r\n            />\r\n            </div>\r\n        }\r\n        {(state.activeQuestion.type === typeName) && controls.isReady && !state.isFinished &&\r\n            <div>\r\n                <Question {...state} pushSingleAnswer={pushSingleAnswer}/>\r\n            </div>}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        \r\n        <div>\r\n\r\n<ReactPlayer url={eval(answers.soundType)} \r\n          playing={true} \r\n          loop={true}\r\n          volume={1}\r\n          controls={false}\r\n          width={0}\r\n          height={0}\r\n          />\r\n        {showQuestion('rotacja',instructions.ROTACJA)}\r\n        {showQuestion('przypominanie',instructions.PRZYPOMINANIE)}\r\n        {showQuestion('odpamietywanie',instructions.ODPAMIETYWANIE)}\r\n        \r\n        {state.isFinished && <Thanks/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PollContainer;","// action is a report on what's happened (using dispatch) \r\n// action creators describe the intent (not worrying about the implementation forn now)\r\n\r\nimport * as types from \"./types\";\r\n\r\n\r\nexport const incrementCounter = () => {\r\n    return {\r\n       type: types.INCREMENT_COUNTER,\r\n    }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendAnswer, pushAnswers, addSoundType } from '../../actions/answers';\r\n\r\nconst Thanks = (props) => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const answers = useSelector(state => state.answers);\r\n    const utils = useSelector(state => state.utils);\r\n\r\n\r\n    useEffect(() => { \r\n        dispatch(sendAnswer(answers))}, [answers]);\r\n  \r\n\r\n    return (\r\n        <div>\r\n        {(utils.answersIsLoading) && <h2>Poczekaj, zapisujemy Twoje opowiedzi...</h2>}\r\n              \r\n        {!(utils.answersIsLoading) && \r\n        \r\n        <h1>Dziękujemy za udział w badaniu!</h1>\r\n        \r\n        \r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thanks\r\n","import React, { useState } from 'react'\r\nimport Checkbox from '../../Utils/Checkbox'\r\nimport { pushAnswer } from '../../../actions/answers';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst Form = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({_id: props.activeQuestion._id, isCorrect: false});\r\n    \r\n    const handleChoice = (e) => {\r\n        \r\n        const choice_id = e.target.value; // grabs a 'key' which is an id of a choice\r\n        \r\n        const chosenAnswer = props.activeQuestion.choices.find(choice => choice._id === choice_id);\r\n        \r\n        if (chosenAnswer.isTrue) {\r\n                setState({...state, _id: props.activeQuestion._id, isCorrect: true})\r\n        } else {\r\n                setState({...state, _id: props.activeQuestion._id, isCorrect: false})\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.pushSingleAnswer(state);\r\n        dispatch(pushAnswer(state))\r\n    };\r\n    \r\n    const createCheckbox = (label,key,handleChoice) => (\r\n        <Checkbox\r\n          label={label}\r\n          handleCheckboxChange={handleChoice}\r\n          val={key}\r\n          key={key}\r\n        />\r\n      );\r\n      \r\n\r\n    return (\r\n\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <p>{props.activeQuestion.text}</p>\r\n            {props.activeQuestion.choices.map((choice, i) => {\r\n                console.log(choice._id);\r\n                return createCheckbox(choice.text, choice._id, handleChoice)\r\n            }               \r\n            )}\r\n\r\n            <input type=\"submit\" value=\"Dalej\"/>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, { useState } from 'react'\r\nimport Form from './Form';\r\nimport './styles.css';\r\n\r\nconst Przypominanie = (props) => {\r\n\r\n    const [imageVisible, setImageVisible] = useState(true)\r\n    \r\n    const timeout = 7000; // czas\r\n\r\n    const timer = () => {\r\n        setTimeout(() => {\r\n            setImageVisible(false)\r\n            },\r\n            timeout)\r\n    }\r\n\r\n    return (\r\n        <div className=\"viewport\">\r\n            {timer()}\r\n\r\n            {(imageVisible) && <img className=\"questionImage\" src={props.activeQuestion.image}/>}\r\n\r\n            {!(imageVisible) && <Form {...props}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Przypominanie\r\n","import React, { useState, useEffect } from 'react'\r\nimport Form from './Form';\r\n\r\n\r\nconst Odpamietywanie = (props) => {\r\n\r\nconst [activeWord, setActiveWord] = useState(props.activeQuestion.words[0]);\r\nconst [counter, setCounter] = useState(1);\r\n\r\nconst timeout = 1000;\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n    setCounter(counter + 1);\r\n    if (counter < props.activeQuestion.words.length)\r\n    setActiveWord(props.activeQuestion.words[counter]);\r\n    else\r\n    setActiveWord(null);\r\n    }, timeout)},[activeWord]);\r\n    \r\n    const renderQuestion = (activeWord) => {\r\n        if (activeWord)\r\n        return <h1>{activeWord}</h1>\r\n        else\r\n        return <Form {...props}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderQuestion(activeWord)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Odpamietywanie\r\n","import React from 'react'\r\nimport Form from './Form';\r\nimport './styles.css';\r\n\r\nconst Rotacja = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <img src={props.activeQuestion.image} className=\"questionImage\"/>\r\n            <Form {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rotacja\r\n","import React, { useState, useEffect } from 'react'\r\nimport Checkbox from './../../Utils/Checkbox';\r\nimport Przypominanie from './Przypominanie';\r\nimport Odpamietywanie from './Odpamietywanie';\r\nimport Rotacja from './Rotacja';\r\n\r\nconst Question = ( props ) => {\r\n\r\n    const ActiveQuestion = (type) => {\r\n        if (type === 'odpamietywanie')\r\n        return <Odpamietywanie {...props}/>\r\n        else if (type === 'przypominanie')\r\n        return <Przypominanie {...props}/>\r\n        else\r\n        return <Rotacja {...props}/> \r\n    }\r\n    \r\n    return (\r\n    \r\n    <div>\r\n    {ActiveQuestion(props.activeQuestion.type)}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import axios from 'axios';\r\n\r\nconst url = 'https://kogniresearch.herokuapp.com/answers';\r\n \r\nconst fetchAnswers = () => {\r\n    return axios.get(url); \r\n};\r\n\r\nconst sendAnswer = (newAnswer) => {\r\n    return axios.post(url, newAnswer);\r\n//    return newAnswer;\r\n};\r\n\r\nconst deleteAnswer = (id) => {  \r\n    return axios.delete(`${url}/${id}`);\r\n}\r\n\r\nconst getLatestAnswer = () => {\r\n    return axios.get(`${url}/latest`);\r\n}\r\n\r\nexport default {fetchAnswers, sendAnswer, deleteAnswer, getLatestAnswer};\r\n\r\n\r\n  ","// action is a report on what's happened (using dispatch) \r\n// action creators describe the intent (not worrying about the implementation forn now)\r\n\r\nimport * as types from \"./types\";\r\n\r\nimport AnswerService from '../services/answers.service';\r\n\r\n\r\nexport const pushUserData = (data) => {\r\n    return {\r\n       type: types.USER_DATA_ADDED,\r\n       payload: data,\r\n    }\r\n}\r\n\r\nexport const pushAnswers = ( data ) => {\r\n    return {\r\n        type: types.ANSWERS_PUSHED,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const pushAnswer = ( data ) => {\r\n    return {\r\n        type: types.ANSWER_PUSHED,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const addSoundType = ( data ) => {\r\n    return {\r\n        type: types.SOUND_TYPE_ADDED,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// export const getAnswers = () => async (dispatch) => {\r\n//     try {\r\n//         dispatch({ type: types.LOADING_DATA })\r\n//         const { data } = await AnswerService.fetchAnswers();\r\n//         dispatch({ type: types.ANSWERS_FETCHED, payload: data });\r\n//         dispatch({ type: types.DATA_LOADED})\r\n//     } catch (error) {\r\n//         dispatch({ type: types.ACTION_FAILED, error})\r\n//     }\r\n// }\r\n\r\n\r\nexport const sendAnswer = (answer) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: types.LOADING_ANSWERS })\r\n        const { data } = await AnswerService.sendAnswer(answer);\r\n        dispatch({ type: types.ANSWERS_LOADED})\r\n        dispatch({ type: types.ANSWER_CREATED, payload: data})\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: types.ACTION_FAILED, error})\r\n    }\r\n}\r\n\r\nexport const getLatestAnswer = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: types.LOADING_ANSWERS })\r\n        const { data } = await AnswerService.getLatestAnswer();\r\n        dispatch({ type: types.ANSWERS_LOADED })\r\n        dispatch({ type: types.LATEST_ANSWER_FETCHED, payload: data})\r\n\r\n        const chooseSoundType = (latestAudio) => {\r\n            switch (latestAudio) {\r\n              case ('station'):\r\n                return 'nature'\r\n              case ('nature'):\r\n                return 'city'\r\n              case ('city'):\r\n                return 'station'\r\n              default:\r\n                return 'station'\r\n            }\r\n          }\r\n\r\n        dispatch({ type: types.SOUND_TYPE_ADDED, payload: chooseSoundType(data.soundType)})\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: types.ACTION_FAILED, error})\r\n    }\r\n}\r\n\r\n// export const deleteAnswer = (id) => async (dispatch) => {\r\n\r\n//     try {\r\n//         dispatch({ type: types.LOADING_DATA })\r\n//         await AnswerService.deleteAnswer(id);\r\n//         dispatch({ type: types.DATA_LOADED})\r\n//         dispatch({ type: types.ANSWER_DELETED, payload: id});\r\n//     }\r\n//     catch (error) {\r\n//         dispatch({ type: types.ACTION_FAILED, error})\r\n//     }\r\n// }\r\n","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/types\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","// reducer handles what to do on the news report (action)\r\nimport * as types from '../actions/types';\r\n\r\nconst initialState = {\r\n    gender: null,\r\n    age: '',\r\n    answers: [],\r\n    soundType: 'station'\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type){ \r\n        case types.USER_DATA_ADDED:\r\n            return {...state, gender: action.payload.gender, age: action.payload.age};            \r\n        case types.ANSWERS_PUSHED:\r\n            return {...state, answers: action.payload}; \r\n        case types.ANSWER_PUSHED:\r\n            return {...state, answers: [...state.answers, action.payload]};\r\n        case types.ANSWER_CREATED:\r\n            return state;\r\n        case types.SOUND_TYPE_ADDED:\r\n            return {...state, soundType: action.payload}\r\n        case types.LATEST_ANSWER_FETCHED:\r\n            return state; \r\n        default:    \r\n            return state;\r\n    }\r\n}\r\n\r\n//in reducer always return some state!","// reducer handles what to do on the news report (action)\r\n\r\nimport * as types from '../actions/types';\r\n\r\nconst initialState = {\r\n    questionsIsLoading: true,\r\n    answersIsLoading: true,\r\n    error: null,\r\n    counter: 0\r\n}\r\n\r\nexport default (utils = initialState, action) => {\r\n\r\n\r\n    switch(action.type){ \r\n\r\n        case types.LOADING_QUESTIONS:\r\n            return {...utils, questionsIsLoading: true};\r\n\r\n        case types.QUESTIONS_LOADED:\r\n            return {...utils, questionsIsLoading: false};\r\n        \r\n\r\n\r\n        case types.LOADING_ANSWERS:\r\n            return {...utils, answersIsLoading: true};\r\n\r\n        case types.ANSWERS_LOADED:\r\n            return {...utils, answersIsLoading: false};\r\n            \r\n\r\n\r\n        case types.ACTION_FAILED:\r\n            return {...utils, error: action.error};\r\n\r\n        case types.INCREMENT_COUNTER:\r\n            return {...utils, counter: utils.counter + 1}\r\n\r\n        default:\r\n            return utils;\r\n         \r\n    }\r\n}","// reducer handles what to do on the news report (action)\r\nimport * as types from '../actions/types';\r\n\r\nconst initialState = {\r\n    gender: null,\r\n    age: '',\r\n    answers: [],\r\n    soundType: ''\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type){ \r\n        case types.LATEST_ANSWER_FETCHED:\r\n            return action.payload;            \r\n\r\n        default:    \r\n            return state;\r\n    }\r\n}\r\n\r\n//in reducer always return some state!","import { combineReducers } from 'redux';\r\nimport questions from './questions';\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport answers from \"./answers\";\r\nimport utils from \"./utils\";\r\nimport answer from './answer';\r\n\r\nexport default combineReducers({\r\n    questions,\r\n    auth,\r\n    message,\r\n    answers,\r\n    answer,\r\n    utils,\r\n    //combineReducers accepts key-value pairs!\r\n});\r\n","// reducer handles what to do on the news report (action)\r\n\r\nimport * as types from '../actions/types';\r\n\r\nexport default (questions = [], action) => {\r\n\r\n\r\n    switch(action.type){ \r\n\r\n        case types.QUESTIONS_FETCHED:\r\n            return action.payload;\r\n\r\n        case types.QUESTIONS_FETCHED:\r\n            return action.payload;\r\n        \r\n         case types.QUESTION_CREATED:\r\n             return [...questions, action.payload]; //add a new question to a global state \r\n\r\n         case types.QUESTION_DELETED:\r\n             return questions.filter((question) => question._id !== action.payload)\r\n             default:\r\n                return questions; \r\n\r\n    }\r\n}\r\n\r\n//in reducer always return some state!","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://kogniresearch.herokuapp.com/api/auth/\";\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n};","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n  } from \"./types\";\r\n  \r\n  import AuthService from \"../services/auth.service\";\r\n  \r\n  export const login = (username, password) => (dispatch) => {\r\n    return AuthService.login(username, password).then(\r\n      (data) => {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: { user: data },\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const message =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n  \r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: message,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n  \r\n  export const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n  \r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { login } from \"../../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  const { message } = useSelector(state => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(login(username, password))\r\n        .then(() => {\r\n          props.history.push(\"/admin\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/admin\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Checkbox from '../Utils/Checkbox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pushUserData } from '../../actions/answers';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './styles.css';\r\n\r\nimport { addSoundType } from '../../actions/answers';\r\n\r\nconst PersonalData = (soundType) => {\r\n\r\n    const initialState = {\r\n        gender: '',\r\n        age: ''\r\n    }\r\n    \r\n    const [data, setData] = useState(initialState)\r\n\r\n    const utils = useSelector(state => state.utils);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(addSoundType(soundType))}, []\r\n    // );\r\n\r\n    const handleGender = (e) => {\r\n        setData({...data, gender: e.target.value});\r\n    }\r\n\r\n    const createCheckbox = (label,handleGender) => (\r\n        <Checkbox\r\n          label={label}\r\n          handleCheckboxChange={handleGender}\r\n          key={label}\r\n        />\r\n    );\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        age: Yup.number().required().typeError('Uzupełnij wiek!'),\r\n        gender: Yup.string().required().typeError('Wybierz płeć!')\r\n    })\r\n\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //         dispatch(pushUserData(data));\r\n    //         setData(initialState);\r\n    // }\r\n\r\n\r\n    return (\r\n\r\n        (utils.questionsIsLoading || utils.answersIsLoading) ? (\r\n            <h1>Poczekaj, ładujemy test....</h1>\r\n        ) : (\r\n        <div>\r\n\r\n            <h3>Badanie Sou_cogtest</h3>\r\n\r\n<p>Witamy w teście Sou_cogtest. Jesteśmy studentkami drugiego roku Kognitywistyki na Uniwersytecie Adama Mickiewicza w Poznaniu.\r\nZapraszamy do wzięcia udziału w badaniu związanym z ludzką percepcją, które prowadzimy w ramach projektu.</p>\r\n\r\n<p>Badanie jest anonimowe i skierowane do osób pełnoletnich, wzięcie udziału jest automatycznym potwierdzeniem tego faktu. Zebrane odpowiedzi\r\nzostaną wykorzystane w celu zbiorowej analizy. Badanie powinno zająć około 15 minut. Konieczne jest posiadanie działającego sprzętu\r\naudio (słuchawki lub głośniki), ponieważ w badaniu pojawią się dźwięki.  W każdej chwili można wycofać się z badania, zamykając okno przeglądarki. </p>\r\n\r\n<p>Koordynatorem projektu jest dr. Łukasz Przybylski, a autorkami badania Weronika Andrzejczak,\r\nAgata Daniszewska, Alicja Deszkiewicz, Marta Słupińska i Maria Wachulak.</p>\r\n\r\n<h5>Instrukcja do badania:</h5>\r\n\r\n<h6>Przed przystąpieniem do badania, usiądź w cichym i spokojnym miejscu. W trakcie\r\nodpowiadania na pytania mogą zostać odtworzne dźwięki. Przed każdym zadaniem zostanie wyświetlona krótka instrukcja</h6>\r\n            <Formik \r\n                initialValues= {{\r\n                    age: '',\r\n                    gender: ''\r\n                }}\r\n                validationSchema = {validationSchema}\r\n                onSubmit = {values => {\r\n                    dispatch(pushUserData(values));\r\n                }}>\r\n            {({ values, errors, touched, isValidating }) => (\r\n                <Form>\r\n                    <div className=\"gender-box\">\r\n                    <label>\r\n                    <Field name=\"age\"/>\r\n                    <p>podaj swój wiek</p>\r\n                    </label>\r\n                    </div>\r\n                    {errors.age && touched.age && <div>{errors.age}</div>}\r\n                    <div role=\"group\" className=\"gender-box\" aria-labelledby=\"my-radio-group\">\r\n                    <label>\r\n                        <label>\r\n                        <Field type=\"radio\" name=\"gender\" value=\"kobieta\" />\r\n                        kobieta\r\n                        </label>\r\n                        <label>\r\n                        <Field type=\"radio\" name=\"gender\" value=\"mężczyzna\" />\r\n                        mężczyzna\r\n                        </label>\r\n                        <p>wybierz płeć</p>\r\n                    </label>\r\n                    </div>\r\n                    {errors.gender && touched.gender && <div>{errors.gender}</div>}\r\n\r\n                    <button type=\"submit\">Zaczynamy!</button>\r\n                </Form>\r\n            )}\r\n\r\n            </Formik>\r\n\r\n        </div>\r\n        )\r\n\r\n        // <div>\r\n        //     <h1>POwitanie</h1>\r\n        //     <p> Skrzatsonda </p>\r\n        //     <form onSubmit={handleSubmit}>\r\n            \r\n\r\n        //     <label>\r\n        //         Podaj wiek\r\n        //         <input value={data.age} type=\"number\"\r\n        //         onChange={(e) => setData({...data, age: e.target.value })} />\r\n                \r\n        //     </label>\r\n\r\n        //     <label>\r\n        //         Podaj płeć\r\n        //         {createCheckbox('kobieta',handleGender)}\r\n        //         {createCheckbox('mężczyzna',handleGender)}\r\n        //         {createCheckbox('inna',handleGender)}\r\n        //     </label>\r\n        //     {(data.gender == null || data.age === '') ? (\r\n        //          <p>wypełnij powyższe pola!</p>\r\n        //     ) : (\r\n        //         <input type=\"submit\" value=\"Dalejże\" />\r\n        //     )}\r\n        //     </form>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default PersonalData","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import UserService from \"../services/user.service\";\r\n// import QuestionService from \"../services/questions.service\";\r\n\r\nimport PersonalData from './../Poll/PersonalData';\r\nimport PollContainer from './../Poll/PollContainer';\r\n\r\nimport ReactPlayer from 'react-player';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport citySound from '../../audio/city.mp3';\r\nimport natureSound from '../../audio/nature.mp3';\r\nimport stationSound from '../../audio/station.mp3';\r\n\r\n\r\n\r\nconst Home = () => {\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const initialAnswerData = useSelector(state => state.answers);\r\n  const utils = useSelector(state => state.utils);\r\n\r\n\r\n  return (\r\n      \r\n      <div>\r\n\r\n          {(initialAnswerData.gender == null && initialAnswerData.age == '') ? (\r\n\r\n          <PersonalData/>) : (\r\n          <PollContainer/>\r\n          )}\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Profile = () => {\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.username}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","export const ODPAMIETYWANIE = 'odpamietywanie';\r\nexport const ROTACJA = 'rotacja';\r\nexport const PRZYPOMINANIE = 'przypominanie';","\r\n// import { ListItemSecondaryAction } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Checkbox from '../../Utils/Checkbox';\r\nimport {\r\n  PRZYPOMINANIE,\r\n  ODPAMIETYWANIE,\r\n  ROTACJA\r\n} from './questionTypes';\r\n\r\nconst TypesMenu = (props) => {\r\n \r\n\r\n  const createCheckbox = (label,handleTypeChoice) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={handleTypeChoice}\r\n      val={label}\r\n    />\r\n  );\r\n\r\n  \r\n\r\n    return (\r\n    \r\n    <div>\r\n    <h5>Choose a question type</h5>\r\n    <form>\r\n      {createCheckbox(PRZYPOMINANIE,props.handleTypeChoice)}\r\n      {createCheckbox(ODPAMIETYWANIE,props.handleTypeChoice)}\r\n      {createCheckbox(ROTACJA,props.handleTypeChoice)}\r\n          </form>\r\n\r\n  </div>\r\n    );\r\n}\r\n\r\nexport default TypesMenu;","import axios from 'axios';\r\n\r\nconst url = 'https://kogniresearch.herokuapp.com/questions';\r\n\r\nconst fetchQuestions = () => {\r\n    return axios.get(url);\r\n};\r\n\r\nconst createQuestion = (newQuestion) => {\r\n    return axios.post(url, newQuestion);\r\n//    return newQuestion;\r\n};\r\n\r\nconst deleteQuestion = (id) => {\r\n    axios.delete(`${url}/${id}`);\r\n}\r\n\r\nexport default {fetchQuestions, createQuestion, deleteQuestion};\r\n\r\n\r\n  ","import React, { useState } from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport TypesMenu from './TypesMenu';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createQuestion } from '../../../actions/questions';\r\n\r\nimport {\r\n    PRZYPOMINANIE,\r\n    ODPAMIETYWANIE,\r\n    ROTACJA\r\n  } from './questionTypes';\r\n  \r\n\r\n\r\n\r\nexport const Form = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialState = {\r\n        text: '', image: '', choices: [], type: '', words: []\r\n    };\r\n\r\n    const [questionData, setQuestionData] = useState(initialState);\r\n\r\n    const [questionType, setQuestionType] = useState('');\r\n\r\n    const [tempWord, setTempWord] = useState('');\r\n\r\n    const [tempAnswer, setTempAnswer] = useState('');\r\n\r\n    // Handle the question type choice\r\n    const handleTypeChoice = (e) => {\r\n        setQuestionType(e.target.value);\r\n        setQuestionData({...questionData, type: e.target.value});\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createQuestion(questionData));\r\n        setQuestionData({...questionData, text: '', image: '', choices: [], words: []});\r\n    };\r\n\r\n    /// Set of functions for handling word lists ///\r\n\r\n\r\n      const handleAddWord = (e) => {\r\n          e.preventDefault();\r\n          \r\n\r\n        if (tempWord === '' || questionData.words.indexOf(tempWord) > -1)\r\n            return 0;\r\n        else \r\n            {\r\n            setQuestionData({...questionData, words: [...questionData.words, tempWord]});\r\n            setTempWord('');\r\n            return 1;\r\n            }\r\n        \r\n\r\n      }\r\n\r\n      const handleRemoveWord = (index) => {\r\n          var list = [...questionData.words];\r\n          list.splice(index, 1)\r\n          setQuestionData({...questionData, words: list});\r\n      }\r\n\r\n      const handleAddAnswer = (e) => {\r\n        e.preventDefault();\r\n\r\n        let compareChoice = (element) => element.text === tempAnswer; \r\n\r\n        if (tempAnswer === '' || questionData.choices.findIndex(compareChoice) > -1)\r\n            return 0;\r\n        else \r\n            {\r\n            setQuestionData({...questionData, choices: [...questionData.choices, {text: tempAnswer, isTrue: false }]});\r\n            setTempAnswer('');\r\n            return 1;\r\n            }\r\n      }\r\n\r\n      const handleIsTrue = (index) => {\r\n\r\n        let modifiedChoices = questionData.choices;\r\n        let i;\r\n\r\n        for (i = 0; i < modifiedChoices.length; i++){ \r\n        modifiedChoices[i].isTrue = false;\r\n        }\r\n        modifiedChoices[index].isTrue = true;\r\n\r\n        setQuestionData({...questionData, choices: modifiedChoices});\r\n      }\r\n\r\n      const handleRemoveAnswer = (index) => {\r\n            let list = [...questionData.choices];\r\n            list.splice(index, 1)\r\n            setQuestionData({...questionData, choices: list});\r\n      }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <TypesMenu handleTypeChoice={handleTypeChoice}/>\r\n\r\n            {(!(questionType === '') && \r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <h4>Create a question of the type {questionType}</h4>\r\n\r\n                <label>\r\n                    Ask a question\r\n                    <textarea value={questionData.text} \r\n                    onChange={(e) => setQuestionData({...questionData, text: e.target.value })}      \r\n                    />\r\n                </label> \r\n                   \r\n                {!(questionType === ODPAMIETYWANIE) &&\r\n                <label>\r\n                    Upload an image\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({base64}) => setQuestionData({ ...questionData, image: base64 })}\r\n                    />\r\n                </label>\r\n                }\r\n\r\n                {(questionType === ODPAMIETYWANIE) && (\r\n                    <label>\r\n                        List the wordz\r\n\r\n                        <input placeholder=\"dodaj slowo\" type=\"text\" value={tempWord}\r\n                            onChange={e => setTempWord(e.target.value)}\r\n                        />\r\n                        <button onClick={handleAddWord} >Add</button>\r\n\r\n                    <ul>\r\n                        {questionData.words.map((x,i) => {\r\n                        return (\r\n                            <li key={questionData.words[i]}>\r\n                                {questionData.words[i]}\r\n                                <button type=\"button\" onClick={() => handleRemoveWord(i)}>Delete</button>\r\n                            </li>\r\n                        );\r\n                        })}\r\n                    </ul>\r\n                        \r\n                        \r\n                    </label>\r\n                )}\r\n\r\n                    <label>\r\n                        Setup possible answers:\r\n\r\n                        <input placeholder=\"dodaj odpowiedz\" type=\"text\" value={tempAnswer}\r\n                            onChange={e => setTempAnswer(e.target.value)}\r\n                        />\r\n                        <button onClick={handleAddAnswer}>Add</button>\r\n\r\n                        <ul>\r\n                        {questionData.choices.map((x,i) => {\r\n                        return (\r\n                            <li key={questionData.choices[i].text}>\r\n                                {questionData.choices[i].text}\r\n                                <label>\r\n                                Prawdziwa?\r\n                                <input type=\"radio\" onChange={() => handleIsTrue(i)} name=\"isTrue\" value=\"isTrue\" />\r\n                                </label>\r\n                                <button type=\"button\" onClick={() => handleRemoveAnswer(i)}>Delete</button>\r\n                            </li>\r\n                        );\r\n                        })}\r\n                        </ul>\r\n\r\n\r\n                    </label>\r\n                    <input type=\"submit\"/>\r\n            </form>\r\n            )}\r\n        </div>\r\n      \r\n    )\r\n}       \r\n\r\nexport default Form;","// action is a report on what's happened (using dispatch) \r\n// action creators describe the intent (not worrying about the implementation forn now)\r\n\r\nimport * as types from \"./types\";\r\n\r\nimport QuestionService from '../services/questions.service';\r\n\r\n// Action Creators (weird two arrow syntax provided by thunk)\r\nexport const getQuestions = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: types.LOADING_QUESTIONS })\r\n        const { data } = await QuestionService.fetchQuestions();\r\n        dispatch({ type: types.QUESTIONS_FETCHED, payload: data });\r\n        dispatch({ type: types.QUESTIONS_LOADED})\r\n    } catch (error) {\r\n        dispatch({ type: types.ACTION_FAILED, error})\r\n    }\r\n}\r\n\r\n\r\nexport const createQuestion = (question) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: types.LOADING_QUESTIONS })\r\n        const { data } = await QuestionService.createQuestion(question);\r\n        dispatch({ type: types.QUESTIONS_LOADED})\r\n        dispatch({ type: types.QUESTION_CREATED, payload: data})\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: types.ACTION_FAILED, error})\r\n    }\r\n}\r\n\r\nexport const deleteQuestion = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: types.LOADING_QUESTIONS })\r\n        await QuestionService.deleteQuestion(id);\r\n        dispatch({ type: types.QUESTIONS_LOADED})\r\n        dispatch({ type: types.QUESTION_DELETED, payload: id});\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: types.ACTION_FAILED, error})\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Image() {\r\n    return (\r\n        <div>\r\n            <h1>An image</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useDispatch } from 'react-redux' ;\r\nimport { deleteQuestion } from '../../../../actions/questions';\r\nimport { Button } from 'bootstrap';\r\nimport { Link, Route, Router, Switch } from 'react-router-dom';\r\nimport Image from './Image';\r\n\r\nimport './styles.css';\r\n\r\nexport const Question = ({ question }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n    <div className=\"border\">\r\n    <div className=\"row\">\r\n        <div className=\"col-10\">\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                Typ pytania\r\n            </div>\r\n            <div className=\"col\">\r\n                {question.type}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                Treść\r\n            </div>\r\n            <div className=\"col\">\r\n                {question.text}\r\n            </div>\r\n        </div>\r\n        {!(question.type === 'odpamietywanie') &&\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                Obrazek\r\n            </div>\r\n            <div className=\"col\">\r\n\r\n                <Link to={`/question_images/${question._id}`}>\r\n                <img className=\"questionImage\" src={question.image}  />\r\n                </Link>\r\n\r\n                \r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n        }\r\n        {(question.type === 'odpamietywanie') &&\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                Słowa\r\n            </div>\r\n            <div className=\"col\">\r\n            <ul>\r\n            {question.words.map(x => {\r\n                return <li>{x.toString()}</li>\r\n            })}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        }\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                Odpowiedzi\r\n            </div>\r\n            <div className=\"col\">\r\n            <ul>\r\n                {question.choices.map(x => {\r\n                    if (x.isTrue)\r\n                    return <li key={question.choices._id} color=\"green\">{x.text}</li>\r\n                    else \r\n                    return <li key={question.choices._id} color=\"black\">{x.text}</li>\r\n                    \r\n\r\n                })}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n     </div>\r\n        <div className=\"col-2\">\r\n                <button onClick={() => dispatch(deleteQuestion(question._id))}>Delete</button>\r\n        </div>\r\n     </div>   \r\n\r\n     </div>   \r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Question;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport Question from './Question/Question'\r\n\r\nconst ListQuestions = () => {\r\n\r\n        const questions = useSelector((state) => state.questions);\r\n        const utils = useSelector((state => state.utils));\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            {(utils.error) ? (\r\n                console.log(questions.error)\r\n            ) \r\n            : (\r\n                questions.map((question) => (\r\n               <Question key={question._id} question={question} /> \r\n                )\r\n                ) \r\n            )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListQuestions;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Form from '../Admin/Form/Form';\r\n\r\nimport ListQuestions from './../Admin/Questions/ListQuestions';\r\nimport { logout } from \"../../actions/auth\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst BoardAdmin = (props) => {\r\n\r\n  const utils = useSelector(state => state.utils);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n    return <Redirect to=\"/login\" />\r\n  };\r\n\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setShowAdminBoard(currentUser);\r\n    }\r\n  }, [currentUser]);\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   UserService.getAdminBoard().then(\r\n  //     (response) => {\r\n  //       setContent(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       const _content =\r\n  //         (error.response &&\r\n  //           error.response.data &&\r\n  //           error.response.data.message) ||\r\n  //         error.message ||\r\n  //         error.toString();\r\n\r\n  //       setContent(_content);\r\n  //     }\r\n  //   );\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n\r\n        {currentUser ? (\r\n          <div>\r\n        <button href=\"/login\" onClick={logOut}>\r\n          Wyloguj się \r\n        </button>\r\n\r\n    {(utils.questionsIsLoading) ? (\r\n        <div>\r\n            <h1>Loading questions</h1>\r\n        </div>\r\n            )\r\n            : (\r\n        <div> \r\n        <h3> Current questions</h3>\r\n        <ListQuestions/>\r\n        <h3>Insert questions</h3>\r\n        <Form/>\r\n        </div>\r\n            )}\r\n            </div>\r\n\r\n  ) : (\r\n    <div className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link to={\"/login\"} className=\"nav-link\">\r\n          <button>Zaloguj się</button>\r\n        </Link>\r\n      </li>\r\n\r\n    </div>\r\n  )}\r\n\r\n     \r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardAdmin;","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Router, HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./components/Routes/Login\";\r\nimport Home from \"./components/Routes/Home\";\r\nimport Profile from \"./components/Routes/Profile\";\r\nimport BoardAdmin from \"./components/Routes/BoardAdmin\";\r\n\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from \"./helpers/history\";\r\n\r\nimport { getQuestions } from \"./actions/questions\";\r\nimport { getLatestAnswer } from './actions/answers';\r\n\r\nimport './styles.css';\r\n\r\nconst App = () => {\r\n  \r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  \r\n  const dispatch = useDispatch(); //Dispatch is used to set states\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }, [dispatch]);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getLatestAnswer())\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuestions())\r\n  }, [dispatch]);\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(createQuestion())\r\n  // }, [dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setShowAdminBoard(currentUser);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n    <div className=\"background\">\r\n      <div className=\"main-container\">\r\n        {/* <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            Skrzat Research Facility\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n            </div>\r\n          )}\r\n        </nav> */}\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            {/* <Route exact path={[\"/\", \"/home\"]} component={Home} /> */}\r\n            <Route exact path={[\"/home\", \"/\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","//authentication\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\n//questions\r\nexport const QUESTIONS_FETCHED = \"QUESTIONS_FETCHED\";\r\nexport const QUESTION_FETCHED = \"QUESTION_FETCHED\";\r\nexport const QUESTION_CREATED = \"QUESTION_CREATED\";\r\nexport const QUESTION_DELETED = \"QUESTION_DELETED\";\r\n\r\n// answers\r\nexport const USER_DATA_ADDED = \"USER_DATA_ADDED\";\r\nexport const ANSWERS_PUSHED = \"ANSWERS_PUSHED\";\r\nexport const ANSWER_PUSHED = \"ANSWER_PUSHED\";\r\n\r\nexport const ANSWER_CREATED = \"ANSWER_CREATED\";\r\nexport const ANSWER_DELETED = \"ANSWER_DELETED\";\r\nexport const ANSWERS_FETCHED = \"ANSWERS_FETCHED\";\r\n\r\nexport const LATEST_ANSWER_FETCHED = \"LATEST_ANSWER_FETCHED\";\r\nexport const GETTING_LATEST_ANSWER = \"GETTING_LATEST_ANSWER\" \r\nexport const SOUND_TYPE_ADDED = \"SOUND_TYPE_ADDED\";\r\n\r\n// utils\r\nexport const ACTION_FAILED = \"ACTION_FAILED\";\r\nexport const LOADING_ANSWERS = \"LOADING_ANSWERS\";\r\nexport const LOADING_QUESTIONS = \"LOADING_QUESTIONS\";\r\nexport const ANSWERS_LOADED = \"ANSWERS_LOADED\";\r\nexport const QUESTIONS_LOADED = \"QUESTIONS_LOADED\";\r\n\r\nexport const INCREMENT_COUNTER = \"INCREMENT_COUNTER\";","import React, { useState } from 'react';\r\n\r\nconst Checkbox = (props) => {\r\n\r\n    const [isChecked, setChecked] = useState(false);\r\n\r\n\r\n    return (\r\n        <div>\r\n             <div className=\"checkbox\">\r\n        <label>\r\n          <input\r\n                            type=\"radio\"\r\n                            value={props.val}\r\n                            onChange={props.handleCheckboxChange}\r\n                            name='chooseType'\r\n                        />\r\n\r\n          {props.label}\r\n        </label>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox;","export const ROTACJA = 'Na dużym obrazku po lewej stronie zobaczysz bryłę geometryczną. Twoim zadaniem jest zaznaczyć która z pokazanych po prawej stronie brył jest taka sama. ';\r\n\r\nexport const ODPAMIETYWANIE = 'Zobaczysz listę słów wyświetlanych słowo po słowie. Twoim zadaniem jest odpowiedzieć na pytanie dotyczące listy słów.';\r\n\r\nexport const PRZYPOMINANIE = 'Zobaczysz obraz, który po chwili zniknie. Twoim zadaniem jest opowiedzieć na pytanie dotyczące obrazu.';","export default __webpack_public_path__ + \"static/media/city.b09e67ef.mp3\";","export default __webpack_public_path__ + \"static/media/nature.c413a125.mp3\";","export default __webpack_public_path__ + \"static/media/station.3e69db40.mp3\";"],"sourceRoot":""}